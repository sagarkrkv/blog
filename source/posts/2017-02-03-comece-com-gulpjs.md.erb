---
title: "Cloud Agnostic Load Balancing and High Availability of Microservices"
presentation: “Developing an architecture that is highly availa”
description: "Comparing "
date: 2017-02-03 17:52
comments: true
image: /assets/images/posts/2015/08/meu-ambiente-gulpjs.png
categories:
 - Spring 17
tags:
 - Airavata
 - API Server
 - Theme 1
---

Microservices architecture is geared towards horizontal scalability, where new instances are spawned/removed to
dynamically respond to changes in demand and/or failures to ensure High Availabilty of the system as a whole.

In this constantly changing environment we need some fault tolerant mechanism to ensure a client is aware of
the network location viz., IP address and port number of these instances.

<div class="image">
  <%= image_tag '/assets/images/posts/2017/02/service-discovery-1.png', alt: 'dynamically scaled microservices' %>
  <a href="https://www.nginx.com/blog/service-discovery-in-a-microservices-architecture/">Image Source</a>
</div>


##Source Registry
Here a service registry plays a key role, as it constantly keeps track of the available services.The network location of a service instance is registered with the service registry when it starts up. It is removed from the service registry when the instance terminates. The service instance’s registration is typically refreshed periodically using a heartbeat mechanism.


<div class="image">
  <%= image_tag '/assets/images/posts/2017/02/service-discovery-2.png', alt: 'service registry for dynamically scaled microservices' %>
  <%= link_to 'Image Source', 'https://www.nginx.com/blog/service-discovery-in-a-microservices-architecture/' %>
</div>


## Consul as Service Registry

The popular service registries are <%= link_to 'Consul','https://www.consul.io' %>,
<%= link_to 'Zookeeper','https://zookeeper.apache.org/'%>, and<%= link_to 'ETCD','https://coreos.com/etcd' %>. We choose
Consul for two primary reasons, multi-datacenter support and inbuilt servive discovery.

Multi-Datacenter support allows us to spread service instances across multiple cloud providers and availabilty zones.
Inbuilt Service Discovery allows clients to directly discover services directly using a DNS or HTTP interface.

More details on Consul's multi-datacenter architecture can be accessed <%= link_to 'here', 'https://www.consul.io/docs/internals/architecture.html'%>.

<div class="image">
  <%= image_tag '/assets/images/posts/2017/02/Instance.png', alt: 'architecture inside cloud instance' %>
</div>
